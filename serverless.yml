service: crud-serverless-users
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:148037648285:table/usersTable

plugins:
  - serverless-dynamodb
  - serverless-offline


package:
  individually: true
  patterns:
    - "!*/**"
    # EL PATRON COINCIDE CON TODOS LOS ARCHIVOS EN EN LOS DIRECTORIOS DEBEN DE SER IGNORADOS/EXCLUIRSE

custom:
  pythonRequirements:
    dockerizePip: true
  serverless-dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

functions:
  get-users:
    handler: get_users/handler.get_users
    package:
      patterns:
        - "get_users/handler.py" # EL PATRON ESTABLECE QUE SOLO SE DEBE DE INCLUIR EL ARCHIVO handler.py
    events:
      - http:
          path: /users/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true # EL PARÁMETRO id ES OBLIGATORIO
  create-users:
    handler: create_users/handler.create_users
    package:
      patterns:
        - "create_users/handler.py"
    events:
      - http:
          path: /users
          method: POST
          request:
            schemas:
              application/json: ${file(schemas/user-schema.json)}
              # EL ESQUEMA DEBE DE ESTAR EN LA CARPETA schemas PARA VALIDAR EL BODY
              # https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings-models.html
  update-users:
    handler: update_users/handler.update_users
    package:
      patterns:
        - "update_users/handler.py"
    events:
      - http:
          path: /users/{id}
          method: PUT
          request:
            parameters:
              paths:
                id: true # EL PARÁMETRO id ES OBLIGATORIO
            schemas:
              application/json: ${file(schemas/user-schema.json)}
              # EL ESQUEMA DEBE DE ESTAR EN LA CARPETA schemas PARA VALIDAR EL BODY
  delete-users:
    handler: delete_users/handler.delete_users
    package:
      patterns:
        - "delete_users/handler.py"
    events:
      - http:
          path: /users/{id}
          method: DELETE
          request:
            parameters:
              paths:
                id: true # EL PARÁMETRO id ES OBLIGATORIO

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
